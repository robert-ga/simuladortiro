import cv2
import mediapipe as mp
import numpy as np
import pyautogui

mp_drawing = mp.solutions.drawing_utils
mp_hands = mp.solutions.hands

cap = cv2.VideoCapture(0, cv2.CAP_DSHOW)

def mapun (longx, in_min, in_max, out_min, out_max):
    return (longx - in_min) * (out_max - out_min) / (in_max - in_min) + out_min

ax=0.0
ay=0.0
with mp_hands.Hands(
    static_image_mode=False,
    max_num_hands=1,
    min_detection_confidence=0.5) as hands:
    while True:
        ret, frame = cap.read()
        if ret == False:
            break

        height, width, _ = frame.shape
        frame = cv2.flip(frame, 1)
        frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

        results = hands.process(frame_rgb)

        if results.multi_hand_landmarks is not None:
            for hand_landmarks in results.multi_hand_landmarks:
                x1 = int(hand_landmarks.landmark[10].x * width)
                y1 = int(hand_landmarks.landmark[10].y * height)
                ax = int(x1)
                ay = int(y1 - 40)
                if ax < 310:
                    ax = ax - 15
                if ax > 370:
                    ax = ax + 25
                if ay > 290:
                    ay = ay + 15

                aq = round(mapun(ax, 100, 600, -30, 30), 1)
                aw = round(mapun(ay, 40, 400, -9, 9), 1)

                rx = str(ax)
                ry = str(ay)

                cv2.circle(frame, (ax, ay), 3, (255, 0, 0), 3)
                cv2.circle(frame, (ax, ay), 3, (255, 255, 255), -1)

            try:

                d = open('Datospuntero.json', 'w')
                d.write(rx + ';' + ry)
                d.close()
            except:
                pass
        cv2.putText(frame, f'x: {ax}', (20, 50), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255, 0, 0), 1)
        cv2.putText(frame, f'y: {ay}', (20, 80), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255, 0, 0), 1)

        cv2.imshow('Frame', frame)
        if cv2.waitKey(1) & 0xFF == 27:
            break
cap.release()
cv2.destroyAllWindows()